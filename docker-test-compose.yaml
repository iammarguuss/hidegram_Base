services:
  front-end-test:
    build:
      context: Front
    ports:
      - "5174:5173"
    expose:
      - "5174"
    container_name: front-end-test
    command: npm run test
    networks:
      - node-network-test

  back-end-test:
    build:
      context: server
    container_name: back-end-test
    environment:
      DATABASE_URL: postgresql://user:password@postgres-test:5432/hidegram-test
      NODE_ENV: production
    ports:
      - "3001:3000"
      - "5556:5556"
    expose:
      - "3001"
    command: >
      sh -c "npx prisma migrate deploy && npm run start:prod"
    depends_on:
      postgres-test:
        condition: service_healthy
    networks:
      - node-network-test

  postgres-test:
    image: postgres:16.3
    container_name: postgres-test
    restart: always
    tty: true
    volumes:
      - ./postgresql.conf:/etc/postgresql.conf
      - ./data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=hidegram-test
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - PGDATA=/var/lib/postgresql/data/hidegram-test/
    ports:
      - '5434:5432'
    expose:
      - '5434'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d hidegram" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - node-network-test

  nginx:
    depends_on:
      - back-end-test
      - front-end-test
    restart: always
    build:
      dockerfile: Dockerfile
      context: nginx
    ports:
      - "80:80"
    expose:
      - 80
    networks:
      - node-network-test

networks:
  node-network-test:
    driver: bridge